{"version":3,"sources":["components/Header/Header.jsx","useFetch.js","components/EditForm/EditForm.jsx","components/Form/Form.jsx","components/assets/logo.png","components/InfoPreview/InfoPreview.jsx","components/services/generatePDF.js","components/Search/Search.jsx","components/Record/Progress/Progress.jsx","components/Record/Record.jsx","utils/utils.js","Home.js","App.js","index.js"],"names":["Header","className","to","useFetch","url","useState","data","setData","error","setError","isPending","setIsPending","useEffect","abortCtrller","AbortController","a","fetch","signal","res","ok","Error","json","jsonData","name","message","fetchData","abort","EditForm","isOpen","history","useHistory","id","useParams","payment","memberName","telephone","paymentType","amount","narration","date","paymentData","setPaymentData","clear","onSubmit","e","preventDefault","axios","patch","then","console","log","push","type","value","required","onChange","event","target","placeholder","onClick","Form","post","InfoPreview","React","show","setShow","src","logo","alt","Date","toLocaleDateString","moment","utc","format","setTimeout","window","print","generatePDF","reports","doc","jsPDF","tableRows","forEach","report","reportData","systemInfo","hostName","autoTable","startY","split","dateStr","text","autoPrint","variant","save","Search","Progress","Record","payments","length","map","str","slice","_id","alert","filteredPayments","filter","method","header","Accept","handleDelete","Home","exact","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79877d9a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\nconst Header = () => {\r\n  return (\r\n    <header className='header'>\r\n      <h1>PAYMENTS</h1>\r\n      <ul>\r\n        <li>\r\n          <Link to='/record'>Record</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/payment'>Add Payment</Link>\r\n        </li>\r\n      </ul>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // COMMENT: Set an {AbortController} to check for the signal and the abort state of the fetch.\r\n    const abortCtrller = new AbortController();\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await fetch(url, { signal: abortCtrller.signal });\r\n        if (!res.ok) {\r\n          throw Error(`Unable to get data!!!`);\r\n        }\r\n        const jsonData = await res.json();\r\n        setData(jsonData);\r\n        setIsPending(false);\r\n        setError(null);\r\n      } catch (error) {\r\n        if (error.name === 'AbortError') {\r\n          return;\r\n        } else {\r\n          setError(error.message);\r\n          setIsPending(false);\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    // COMMENT: Clean up the stat after the fetch is aborted.\r\n    return () => abortCtrller.abort();\r\n  }, [url]);\r\n  return { data, error, isPending, setData };\r\n};\r\n\r\nexport default useFetch;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './EditForm.css';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Header from '../Header/Header';\r\nimport useFetch from '../../useFetch';\r\n\r\nconst EditForm = () => {\r\n  const [isOpen] = useState(false);\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const { data: payment } = useFetch(\r\n    'https://church-payment.herokuapp.com/payments' + id\r\n  );\r\n\r\n  const [paymentData, setPaymentData] = useState({\r\n    memberName: '',\r\n    telephone: '',\r\n    paymentType: '',\r\n    amount: '',\r\n    narration: '',\r\n    date: ''\r\n  });\r\n\r\n  const clear = () => {\r\n    setPaymentData({\r\n      memberName: '',\r\n      telephone: '',\r\n      paymentType: '',\r\n      amount: 0,\r\n      narration: '',\r\n      date: '',\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .patch(`http://localhost:5500/payments`, { ...paymentData })\r\n      .then((res) => {\r\n        console.log(res);\r\n      });\r\n\r\n    clear();\r\n    history.push('/record');\r\n  };\r\n\r\n  return (\r\n    <div className='form-center'>\r\n      <Header />\r\n      {!isOpen && (\r\n        <div className='form-container container'>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className='form-element'>\r\n              <label>\r\n                Member Name\r\n                <input\r\n                  type='text'\r\n                  value={payment.memberName}\r\n                  required\r\n                  onChange={(event) =>\r\n                    setPaymentData({\r\n                      ...paymentData,\r\n                      memberName: event.target.value,\r\n                    })\r\n                  }\r\n                  placeholder='Enter your name...'\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className='form-element'>\r\n              <label>\r\n                Contact Number\r\n                <input\r\n                  type='tel'\r\n                  value={payment.telephone}\r\n                  required\r\n                  onChange={(event) =>\r\n                    setPaymentData({\r\n                      ...paymentData,\r\n                      telephone: event.target.value,\r\n                    })\r\n                  }\r\n                  placeholder='Enter your phone number...'\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className='form-element'>\r\n              <label>\r\n                Payment Type\r\n                <select\r\n                  value={payment.paymentType}\r\n                  required\r\n                  onChange={(event) =>\r\n                    setPaymentData({\r\n                      ...paymentData,\r\n                      paymentType: event.target.value,\r\n                    })\r\n                  }>\r\n                  <option value='Default'>Choose a type of payment</option>\r\n                  <option value='Offering'>Offering</option>\r\n                  <option value='Tithes'>Tithes</option>\r\n                  <option value='Contribution'>Contribution</option>\r\n                  <option value='Others'>Others</option>\r\n                </select>\r\n              </label>\r\n            </div>\r\n            <div className='form-element'>\r\n              <label>\r\n                Amount\r\n                <input\r\n                  type='number'\r\n                  required\r\n                  value={payment.amount}\r\n                  onChange={(event) =>\r\n                    setPaymentData({\r\n                      ...paymentData,\r\n                      amount: event.target.value,\r\n                    })\r\n                  }\r\n                  placeholder='Enter your amount...'\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className='form-element'>\r\n              <label>\r\n                Narration\r\n                <textarea\r\n                  className='form-narration'\r\n                  value={payment.narration}\r\n                  onChange={(event) =>\r\n                    setPaymentData({\r\n                      ...paymentData,\r\n                      narration: event.target.value,\r\n                    })\r\n                  }\r\n                  placeholder='Describe your payment...'\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className='form-element'>\r\n              <label>\r\n                Date\r\n                <input\r\n                  type='Date'\r\n                  value={payment.date}\r\n                  onChange={(event) =>\r\n                    setPaymentData({ ...paymentData, date: event.target.value })\r\n                  }\r\n                />\r\n              </label>\r\n            </div>\r\n\r\n            <div className='form-buttons'>\r\n              <button onClick={clear} className='btn btn-cancel'>\r\n                Clear\r\n              </button>\r\n              <button type='submit' className='btn btn-save'>\r\n                Save\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditForm;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Form.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Header from '../Header/Header';\r\n\r\nconst Form = () => {\r\n  const [isOpen] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const [paymentData, setPaymentData] = useState({\r\n    memberName: '',\r\n    telephone: '',\r\n    paymentType: '',\r\n    amount: 0,\r\n    narration: '',\r\n    date: '',\r\n  });\r\n\r\n  const clear = () => {\r\n    setPaymentData({\r\n      memberName: '',\r\n      telephone: '',\r\n      paymentType: '',\r\n      amount: 0,\r\n      narration: '',\r\n      date: '',\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .post('https://church-payment.herokuapp.com/payments', { ...paymentData })\r\n      .then((res) => {\r\n        console.log(res);\r\n      });\r\n\r\n    clear();\r\n    history.push('/record');\r\n  };\r\n\r\n  return (\r\n    <div className='form-center'>\r\n      <Header />\r\n      {!isOpen && (\r\n        <div className='form-container container'>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className='form-element'>\r\n              <label>\r\n                Member Name\r\n                <input\r\n                  type='text'\r\n                  value={paymentData.memberName}\r\n                  required\r\n                  onChange={(event) =>\r\n                    setPaymentData({\r\n                      ...paymentData,\r\n                      memberName: event.target.value,\r\n                    })\r\n                  }\r\n                  placeholder='Enter your name...'\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className='form-element'>\r\n              <label>\r\n                Contact Number\r\n                <input\r\n                  type='tel'\r\n                  value={paymentData.telephone}\r\n                  required\r\n                  onChange={(event) =>\r\n                    setPaymentData({\r\n                      ...paymentData,\r\n                      telephone: event.target.value,\r\n                    })\r\n                  }\r\n                  placeholder='Enter your phone number...'\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className='form-element'>\r\n              <label>\r\n                Payment Type\r\n                <select\r\n                  value={paymentData.paymentType}\r\n                  required\r\n                  onChange={(event) =>\r\n                    setPaymentData({\r\n                      ...paymentData,\r\n                      paymentType: event.target.value,\r\n                    })\r\n                  }>\r\n                  <option value='Default'>Choose a type of payment</option>\r\n                  <option value='Offering'>Offering</option>\r\n                  <option value='Tithes'>Tithes</option>\r\n                  <option value='Contribution'>Contribution</option>\r\n                  <option value='Others'>Others</option>\r\n                </select>\r\n              </label>\r\n            </div>\r\n            <div className='form-element'>\r\n              <label>\r\n                Amount\r\n                <input\r\n                  type='number'\r\n                  required\r\n                  value={paymentData.amount}\r\n                  onChange={(event) =>\r\n                    setPaymentData({\r\n                      ...paymentData,\r\n                      amount: event.target.value,\r\n                    })\r\n                  }\r\n                  placeholder='Enter your amount...'\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className='form-element'>\r\n              <label>\r\n                Narration\r\n                <textarea\r\n                  className='form-narration'\r\n                  value={paymentData.narration}\r\n                  onChange={(event) =>\r\n                    setPaymentData({\r\n                      ...paymentData,\r\n                      narration: event.target.value,\r\n                    })\r\n                  }\r\n                  placeholder='Describe your payment...'\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className='form-element'>\r\n              <label>\r\n                Date\r\n                <input\r\n                  type='Date'\r\n                  value={paymentData.date}\r\n                  onChange={(event) =>\r\n                    setPaymentData({ ...paymentData, date: event.target.value })\r\n                  }\r\n                />\r\n              </label>\r\n            </div>\r\n\r\n            <div className='form-buttons'>\r\n              <button onClick={clear} className='btn btn-cancel'>\r\n                Clear\r\n              </button>\r\n              <button type='submit' className='btn btn-save'>\r\n                Save\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","export default __webpack_public_path__ + \"static/media/logo.2648338d.png\";","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport useFetch from '../../useFetch';\r\nimport moment from 'moment';\r\nimport './InfoPreview.css';\r\nimport logo from '../assets/logo.png';\r\n\r\nconst InfoPreview = () => {\r\n  const { id } = useParams();\r\n  const { data: payment } = useFetch(\r\n    'https://church-payment.herokuapp.com/payments' + id\r\n  );\r\n  const [show, setShow] = React.useState(true);\r\n\r\n  // const paymentInformation = {\r\n  //   tithes: 'Tithes',\r\n  //   contribution: 'Contribution',\r\n  //   offering: 'Offering',\r\n  //   others: 'Other',\r\n  // };\r\n \r\n\r\n  const handlePrint = () => {\r\n    setShow(false);\r\n    setTimeout(() => {\r\n      window.print();\r\n    }, 100);\r\n  };\r\n\r\n  return (\r\n    payment && (\r\n      <div className='preview'>\r\n        <div className='title'>\r\n          <img src={logo} alt='Church Logo' />\r\n          <p>{new Date().toLocaleDateString()}</p>\r\n        </div>\r\n        <div className='user-info'>\r\n          <h3>{payment.memberName}</h3>\r\n          <p>0{payment.telephone}</p>\r\n        </div>\r\n        <div className='content'>\r\n          <table className='preview-table'>\r\n            <thead>\r\n              <tr>\r\n                <th>Amount</th>\r\n                <th>Payment Type</th>\r\n                <th>Date</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              <tr>\r\n                <td>GHS {payment.amount}</td>\r\n                <td>{payment.paymentType}</td>\r\n                <td>{moment(payment.date).utc().format('MM/DD/YYYY')}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className='narration-info'>\r\n          <h4>Narration</h4>\r\n          <p>{payment.narration}</p>\r\n        </div>\r\n        <div className='thanks'>\r\n          <h2>Thanks</h2>\r\n        </div>\r\n\r\n        <div className='print-btn'>\r\n          {show && (\r\n            <button className='print-save-btn' onClick={handlePrint}>\r\n              Save/Print\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default InfoPreview;\r\n","import jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\n// Date Fns is used to format the dates we receive\r\n// from our API call\r\nimport { format } from 'date-fns';\r\n\r\n// define a generatePDF function that accepts a reports argument\r\nconst generatePDF = (reports) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n\r\n  // define the columns we want and their titles\r\n  const tableColumn = ['NAME', 'AMOUNT', 'PAYMENT TYPE', 'DATE', 'HOSTNAME'];\r\n  // define an empty array of rows\r\n  const tableRows = [];\r\n\r\n  // for each report pass all its data into an array\r\n  reports.forEach((report) => {\r\n    report.date = format(new Date(report.date), 'dd-MM-yyyy');\r\n    const reportData = [\r\n      report.memberName,\r\n      report.amount,\r\n      report.paymentType,\r\n      report.date,\r\n      report.systemInfo.hostName,\r\n    ];\r\n    tableRows.push(reportData);\r\n  });\r\n\r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 20 });\r\n  const date = Date().split(' ');\r\n  // we use a date string to generate our filename.\r\n  const dateStr = date[0] + date[1] + date[2] + date[3] + date[4];\r\n  // report title. and margin-top + margin-left\r\n  doc.text('Payments Report', 14, 15);\r\n  // we define the name of our PDF file.\r\n  doc.autoPrint({ variant: 'non-conform' });\r\n  doc.save(`report_${dateStr}.pdf`);\r\n};\r\n\r\nexport default generatePDF;\r\n","import React from 'react';\r\nimport useFetch from '../../useFetch';\r\nimport generatePDF from '../services/generatePDF';\r\nimport './Search.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Search = () => {\r\n  const { data: reports } = useFetch(\r\n    'https://church-payment.herokuapp.com/payments'\r\n  );\r\n\r\n  return (\r\n    <div className='search-bar'>\r\n      <Link to='/payment'>Add Payment Record</Link>\r\n      <button onClick={() => generatePDF(reports)}>Print Records</button>\r\n      <input type='search' placeholder='Search' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { Link } from 'react-router-dom';\r\nimport './Progress.css';\r\n\r\nconst Progress = () => {\r\n  return (\r\n    <div className='progress'>\r\n      <div className='bouncingLoader'>\r\n        <div></div>\r\n      </div>\r\n      <Link to='/payment'>\r\n        <div className='slideUpBtn'>\r\n          <span>Add Payment</span>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Progress;\r\n","import React from 'react';\r\nimport { format } from 'date-fns';\r\n\r\nimport './Record.css';\r\n\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport useFetch from '../../useFetch';\r\nimport Search from '../Search/Search';\r\nimport { Link } from 'react-router-dom';\r\nimport Progress from './Progress/Progress';\r\nimport { truncateString } from '../../utils/utils';\r\nimport Header from '../Header/Header';\r\n\r\nconst Record = () => {\r\n  const { data: payments, setData } = useFetch(\r\n    'https://church-payment.herokuapp.com/payments'\r\n  );\r\n\r\n  const handleDelete = (id) => {\r\n    window.alert('Do you want to delete?');\r\n    const filteredPayments = payments.filter((payment) => payment._id !== id);\r\n\r\n    fetch('https://church-payment.herokuapp.com/payments' + id, {\r\n      method: 'DELETE',\r\n      header: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    setData(filteredPayments);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      {!payments.length ? (\r\n        <Progress />\r\n      ) : (\r\n        <div>\r\n          <Search />\r\n          <table className='records'>\r\n            <thead>\r\n              <tr>\r\n                <th>name</th>\r\n                <th>Amount</th>\r\n                <th>Contact</th>\r\n                <th>Payment Type</th>\r\n                <th>Date</th>\r\n                <th>Narration</th>\r\n                <th></th>\r\n                <th></th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {payments.map((payment) => {\r\n                return (\r\n                  <tr key={payment._id}>\r\n                    <td>{payment.memberName}</td>\r\n                    <td>GHS {payment.amount}</td>\r\n                    <td>0{payment.telephone}</td>\r\n                    <td>{payment.paymentType}</td>\r\n                    <td>{format(new Date(payment.date), 'dd-MM-yyyy')}</td>\r\n                    <td>{truncateString(payment.narration)}</td>\r\n                    <td className='icon icon-visible'>\r\n                      <Link\r\n                        className='remove-style'\r\n                        to={`/record/${payment._id}`}>\r\n                        <VisibilityIcon className='icons' />\r\n                      </Link>\r\n                    </td>\r\n                    <td className='icon icon-edit'>\r\n                      <Link className='edit-remove' to={`/edit/${payment._id}`}>\r\n                        <EditIcon className='icons' />\r\n                      </Link>\r\n                    </td>\r\n                    <td className='icon icon-delete'>\r\n                      <DeleteIcon\r\n                        className='icons'\r\n                        onClick={() => handleDelete(payment._id)}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Record;\r\n","export const truncateString = (str) =>\r\n  str.length <= 30 ? str : str.slice(0, 30) + '...';\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport EditForm from './components/EditForm/EditForm';\r\nimport Form from './components/Form/Form';\r\nimport InfoPreview from './components/InfoPreview/InfoPreview';\r\nimport Record from './components/Record/Record';\r\n\r\nconst Home = () => {\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Record />\r\n          </Route>\r\n          <Route path='/payment'>\r\n            <Form />\r\n          </Route>\r\n          <Route exact path='/record'>\r\n            <Record />\r\n          </Route>\r\n          <Route path='/record/:id'>\r\n            <InfoPreview />\r\n          </Route>\r\n          <Route path='/edit/:id'>\r\n            <EditForm />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Home from './Home';\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n   <Home />\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}